---
- name: Create docker network
  docker_network:
    name: "{{ docker_network_name }}"
  tags:
    - logstash

- name: Ensure logstash pipeline conf dir exists
  file:
    path: "{{ logstash_conf_dir }}/pipeline"
    state: directory
  tags:
    - logstash

- name: Ensure Logstash certs dir exists
  file:
    state: "directory"
    path: "{{ logstash_certs_dir }}" 
  tags:
    - logstash

- name: Copy certificates
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
   - { src: "{{ inventory_dir }}/files/certs/{{ ansible_hostname }}/", dest: "{{ logstash_certs_dir }}" }
   - { src: "{{ inventory_dir }}/files/certs/ca/", dest: "{{ logstash_certs_dir }}" }   
  tags:
    - logstash

- name: Template logstash config
  template: 
    src: logstash.yml.j2
    dest: "{{ logstash_conf_dir }}/logstash.yml"
  notify: Restart logstash container
  tags:
    - logstash

- name: Template logstash pipeline config
  template: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'syslog.conf.j2', dest: '{{ logstash_conf_dir }}/pipeline/syslog.conf' }
    - { src: 'beats.conf.j2', dest: '{{ logstash_conf_dir }}/pipeline/beats.conf' }
  notify: Restart logstash container
  tags:
    - logstash

- name: Start logstash container
  docker_container:
    name: "{{ logstash_hostname }}"
    image: "{{ logstash_image }}"
    ports:
    - 5000:5000
    - 5044:5044
    volumes:
    - "{{ logstash_conf_dir }}/logstash.yml:{{ logstash_conf_dir }}/logstash.yml:ro"    
    - "{{ logstash_conf_dir }}/pipeline/:{{ logstash_conf_dir }}/pipeline/:ro"
    - "{{ logstash_certs_dir }}:{{ logstash_certs_dir }}:ro"
    networks:
    - name: "{{ docker_network_name }}"
    log_driver: json-file
    log_options:
      max-size: "{{ docker_log_max_size }}"
      max-file: "{{ docker_log_max_file }}"
    restart: yes
    restart_policy: unless-stopped
  tags:
    - logstash